name: Build FFmpeg on push
on:
  push:
    paths:
      - .github/workflows/build-on-push.yaml
  
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        os: [win64, ubuntu]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: build_x264
        run: ./vobuild/build.sh -t x264
        
      - name: build_x265
        run: ./vobuild/build.sh -t x265
        
      - name: build_vmaf
        run: ./vobuild/build.sh -t vmaf

      - name: build_eagle
        run: ./vobuild/build.sh -t eagle
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg_build
          path: |
            vobuild/install/
          if-no-files-found: ignore
      
  publish_release:
    name: Publish release
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ffmpeg_build
          path: vobuild/install/
      - name: Compress upload files
        run: |
          cd vobuild/install/
          for FILE in ./*;do cd $(basename $FILE); FILE_NAME="win32_$(basename $FILE)_$(date +'%Y%m%d').zip"; FILE_NAME=${FILE_NAME/ffmpeg_git_lgpl/ffmpeg_lgpl}; FILE_NAME=${FILE_NAME/ffmpeg_git/ffmpeg_gpl}; if [[ $FILE_NAME == *"shared"* ]];then rm ./*.exe;fi; echo Compressing $FILE_NAME...; zip -r ../../../$FILE_NAME ./; cd ../;done
      - name: Create Release
        run: |
          set -e
          NAME="FFmpeg $(date +'%Y-%m-%d')"
          TAGNAME="workflow-$(date +'%Y%m%d%H%M')"
          echo "Creating draft tag: $TAGNAME"
          hub release create --draft $(for zip in ./win*.zip; do echo --attach $zip; done) -m "$NAME" -t "main" "$TAGNAME"
          echo "Created draft tag: $TAGNAME"
          echo "Publishing draft tag: $TAGNAME"
          hub release edit --draft=false $TAGNAME -m ""
          echo "Published draft tag: $TAGNAME"